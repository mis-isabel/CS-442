/*Isabel Sutedjo
20006618
I pledge my honor that I have abided by the Stevens Honor System.
Query 1*/
WITH MONTH_LIST AS
	(SELECT PROD,
			MONTH,
			AVG(QUANT) AVERAGE
		FROM SALES
		GROUP BY PROD,
			MONTH),
BEFORE AS
	(SELECT MONTH1.PROD,
			MONTH1.MONTH,
			MONTH2.MONTH BEFORE_MO,
			MONTH2.AVERAGE
		FROM MONTH_LIST MONTH1
		INNER JOIN MONTH_LIST MONTH2 ON MONTH1.MONTH - 1 = MONTH2.MONTH
		AND MONTH1.PROD = MONTH2.PROD), AFTER AS
	(SELECT MONTH1.PROD,
			MONTH1.MONTH,
			MONTH2.MONTH AFTER_MO,
			MONTH2.AVERAGE
		FROM MONTH_LIST MONTH1
		INNER JOIN MONTH_LIST MONTH2 ON MONTH1.MONTH + 1 = MONTH2.MONTH
		AND MONTH1.PROD = MONTH2.PROD), REF AS
	(SELECT C.PROD,
			C.MONTH,
			B.AVERAGE PREV_AVG,
			A.AVERAGE NEXT_AVG
		FROM
		BEFORE B
		INNER JOIN MONTH_LIST C ON B.MONTH = C.MONTH
		AND C.PROD = B.PROD
		INNER JOIN AFTER A ON C.MONTH = A.MONTH
		AND C.PROD = A.PROD
		ORDER BY C.PROD,
			C.MONTH), NULLTABLE AS
	(SELECT S.PROD,
			S.MONTH,
			COUNT(QUANT) AS SALES_COUNT_BETWEEN_AVGS
		FROM SALES S
		NATURAL FULL OUTER JOIN REF R WHERE S.MONTH = R.MONTH
		AND ((S.QUANT BETWEEN R.PREV_AVG AND R.NEXT_AVG)
							OR (S.QUANT BETWEEN R.NEXT_AVG AND R.PREV_AVG))
		GROUP BY S.PROD,
			S.MONTH
		ORDER BY S.PROD,
			S.MONTH),
	ADDNULL AS
	(SELECT S.PROD,
			S.MONTH,
			0 AS SALES_COUNT_BETWEEN_AVGS
		FROM SALES S),
	COMBINE AS
	(SELECT B.PROD,
			B.MONTH,
			B.SALES_COUNT_BETWEEN_AVGS
		FROM NULLTABLE B
		GROUP BY B.PROD,
			B.MONTH,
			B.SALES_COUNT_BETWEEN_AVGS
		UNION SELECT M.PROD,
			M.MONTH,
			0 AS SALES_COUNT_BETWEEN_AVGS
		FROM ADDNULL M)
SELECT COMBINE.PROD AS PRODUCT,
	COMBINE.MONTH AS MONTH,
	MAX(COMBINE.SALES_COUNT_BETWEEN_AVGS) AS SALES_COUNT_BETWEEN_AVGS
FROM COMBINE
GROUP BY PRODUCT,
	MONTH
ORDER BY PRODUCT,
	MONTH

--Query 2
WITH Q1_SALES AS
	(SELECT *
		FROM SALES,

			(SELECT 1 AS Q1) AS QUARTER1
		WHERE SALES.MONTH BETWEEN 1 AND 3 ),
	Q2_SALES AS
	(SELECT *
		FROM SALES,

			(SELECT 2 AS Q1) AS QUARTER2
		WHERE SALES.MONTH BETWEEN 4 AND 6 ),
	Q3_SALES AS
	(SELECT *
		FROM SALES,

			(SELECT 3 AS Q1) AS QUARTER3
		WHERE SALES.MONTH BETWEEN 7 AND 9 ),
	Q4_SALES AS
	(SELECT *
		FROM SALES,

			(SELECT 4 AS Q1) AS QUARTER4
		WHERE SALES.MONTH BETWEEN 10 AND 12 ),
	ALL_QUARTERS AS
	(SELECT *
		FROM Q1_SALES
		UNION SELECT *
		FROM Q2_SALES
		UNION SELECT *
		FROM Q3_SALES
		UNION SELECT *
		FROM Q4_SALES),
BEFORE AS
	(SELECT AQ1.CUST,
			AQ1.PROD,
			AQ1.Q1,
			AVG(AQ2.QUANT) AS BEFORE_AVG
		FROM ALL_QUARTERS AS AQ1,
			ALL_QUARTERS AS AQ2
		WHERE AQ1.CUST = AQ2.CUST
			AND AQ1.PROD = AQ2.PROD
			AND AQ1.Q1 = (AQ2.Q1 + 1)
		GROUP BY AQ1.CUST,
			AQ1.PROD,
			AQ1.Q1), DURING AS
	(SELECT AQ1.CUST,
			AQ1.PROD,
			AQ1.Q1,
			AVG(AQ1.QUANT) AS DURING_AVG
		FROM ALL_QUARTERS AS AQ1
		GROUP BY AQ1.CUST,
			AQ1.PROD,
			AQ1.Q1),
	AFTER AS
	(SELECT AQ1.CUST,
			AQ1.PROD,
			AQ1.Q1,
			AVG(AQ2.QUANT) AS AFTER_AVG
		FROM ALL_QUARTERS AS AQ1,
			ALL_QUARTERS AS AQ2
		WHERE AQ1.CUST = AQ2.CUST
			AND AQ1.PROD = AQ2.PROD
			AND AQ1.Q1 = (AQ2.Q1 - 1)
		GROUP BY AQ1.CUST,
			AQ1.PROD,
			AQ1.Q1)
SELECT CUST AS CUSTOMER,
	PROD AS PRODUCT,
	Q1 AS QRTR,
	BEFORE_AVG,
	DURING_AVG,
	AFTER_AVG
FROM
BEFORE NATURAL
FULL OUTER JOIN DURING NATURAL
FULL OUTER JOIN AFTER
ORDER BY CUST,
	PROD,Q1

--Query 3
WITH P1 AS
	(SELECT S1.CUST,
			S1.PROD,
			S1.STATE,
			AVG(S2.QUANT) PROD_AVG
		FROM SALES S1
		LEFT OUTER JOIN SALES S2 ON S1.PROD = S2.PROD
		AND S1.CUST = S2.CUST
		AND S1.STATE = S2.STATE
		GROUP BY S1.CUST,
			S1.PROD,
			S1.STATE),
	P2 AS
	(SELECT S1.CUST,
			S1.PROD,
			S1.STATE,
			AVG(S2.QUANT) OTHER_CUST_AVG
		FROM P1 S1
		LEFT OUTER JOIN SALES S2 ON S1.PROD = S2.PROD
		AND S1.STATE = S2.STATE
		AND S1.CUST != S2.CUST
		GROUP BY S1.CUST,
			S1.PROD,
			S1.STATE),
	P3 AS
	(SELECT S1.CUST,
			S1.PROD,
			S1.STATE,
			AVG(S2.QUANT) OTHER_PROD_AVG
		FROM P1 S1
		LEFT OUTER JOIN SALES S2 ON S1.CUST = S2.CUST
		AND S1.STATE = S2.STATE
		AND S1.PROD != S2.PROD
		GROUP BY S1.CUST,
			S1.PROD,
			S1.STATE),
	P4 AS
	(SELECT P1.CUST,
			P1.PROD,
			P1.STATE,
			PROD_AVG,
			OTHER_CUST_AVG,
			OTHER_PROD_AVG
		FROM P1
		FULL OUTER JOIN P2 ON P1.CUST = P2.CUST
		AND P1.PROD = P2.PROD
		AND P1.STATE = P2.STATE
		FULL OUTER JOIN P3 ON P2.CUST = P3.CUST
		AND P2.PROD = P3.PROD
		AND P2.STATE = P3.STATE)
SELECT *
FROM P4;

--Query 4
WITH PROD_QUANT AS
	(SELECT PROD,
			QUANT
		FROM SALES
		GROUP BY PROD,
			QUANT),
	COUNT_ROWS AS
	(SELECT PQ1.PROD,
			PQ1.QUANT,
			COUNT(PQ2.PROD) AS COUNT
		FROM PROD_QUANT AS PQ1
		INNER JOIN SALES AS PQ2 ON PQ1.PROD = PQ2.PROD
		AND PQ2.QUANT <= PQ1.QUANT
		GROUP BY PQ1.PROD,
			PQ1.QUANT),
	MID_MAX AS
	(SELECT PROD,
			FLOOR(MAX(COUNT) / 2.0) AS MIDDLE
		FROM COUNT_ROWS
		GROUP BY PROD),
	RESULT AS
	(SELECT CR.PROD AS PRODUCT,
			MIN(CR.QUANT) AS MEDIAN_QUANT
		FROM COUNT_ROWS AS CR
		INNER JOIN MID_MAX AS MM ON CR.PROD = MM.PROD
		AND CR.COUNT >= MM.MIDDLE
		GROUP BY CR.PROD
		ORDER BY CR.PROD)
SELECT *
FROM RESULT;